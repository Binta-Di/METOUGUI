plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "434"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "4.4"
}

android {
    namespace 'com.example.travee'
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "29.0.13113456"


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.travee"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
//        versionCode = flutterVersionCode.toInteger()
//        versionName = flutterVersionName
        versionCode 448
        versionName "4.5.1"

    }


    dependencies {
        implementation 'com.google.android.gms:play-services-auth:21.2.0'
        implementation 'com.google.android.gms:play-services-auth-api-phone:18.1.0'
    }
    signingConfigs {
        release {
            // signing properties here
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


//    splits {
//        abi {
//            enable true
//            reset()
//            include "armeabi-v7a", "arm64-v8a"  // Limiter aux architectures principales
////            universalApk true  // Garder un APK universel pour d√©pannage
//        }
//    }
}

flutter {
    source = "../.."
}


